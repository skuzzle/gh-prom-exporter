<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>de.skuzzle</groupId>
        <artifactId>skuzzle-parent</artifactId>
        <version>3.0.2</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>
    <groupId>de.skuzzle.ghpromexporter</groupId>
    <artifactId>gh-prom-exporter</artifactId>
    <version>0.0.20-SNAPSHOT</version>
    <name>gh-prom-exporter</name>
    <description>Export GitHub repository metrics in prometheus format</description>
    <properties>
        <java.version>17</java.version>
        <!-- Enable Code coverage -->
        <coveralls.skip>false</coveralls.skip>
        <!-- Skip dependency analysis (not compatible with Java 17 by now) -->
        <mdep.analyze.skip>true</mdep.analyze.skip>
        <!-- Skip javadoc (not needed and also not compatible with Java 17 by now) -->
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <!-- Do not deploy to Maven Central -->
        <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
        <!-- Do not sign jars -->
        <gpg.skip>true</gpg.skip>
        <github.name>gh-prom-exporter</github.name>
        <docker.publish.usr>CHANGE_ME</docker.publish.usr>
        <docker.publish.psw>CHANGE_ME</docker.publish.psw>
        <docker.registry.name>ghcr.io</docker.registry.name>
        <docker.image.name>${docker.registry.name}/${github.user}/${github.name}/${project.artifactId}</docker.image.name>
        <spring-boot.version>3.0.1</spring-boot.version>
        <guava.version>31.1-jre</guava.version>
        <github-api.version>1.313</github-api.version>
        <snapshottest.version>1.7.1</snapshottest.version>
    </properties>
    <repositories>
        <repository>
            <id>repository.spring.milestone</id>
            <name>Spring Milestone Repository</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>repository.spring.milestone</id>
            <name>Spring Milestone Repository</name>
            <url>https://repo.spring.io/milestone</url>
        </pluginRepository>
    </pluginRepositories>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>de.skuzzle.test</groupId>
                <artifactId>snapshot-tests-bom</artifactId>
                <version>${snapshottest.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.kohsuke</groupId>
                <artifactId>github-api</artifactId>
                <version>${github-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <!-- Spring-Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-brave</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.kohsuke</groupId>
            <artifactId>github-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <!-- Prometheus -->
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient</artifactId>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient_common</artifactId>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>de.skuzzle.test</groupId>
            <artifactId>snapshot-tests-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>readme/</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.amashchenko.maven.plugin</groupId>
                <artifactId>gitflow-maven-plugin</artifactId>
                <configuration>
                    <postReleaseGoals>clean</postReleaseGoals>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.ragedunicorn.tools.maven</groupId>
                <artifactId>github-release-maven-plugin</artifactId>
                <configuration>
                    <releaseNotes>RELEASE_NOTES.md</releaseNotes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <image>
                        <name>${docker.image.name}</name>
                        <tags>
                            <tag>${docker.image.name}:${project.version}</tag>
                            <tag>${docker.image.name}:latest</tag>
                        </tags>
                    </image>
                    <docker>
                        <publishRegistry>
                            <url>https://${docker.registry.name}</url>
                            <username>${docker.publish.usr}</username>
                            <password>${docker.publish.psw}</password>
                            <email>simon@taddiken.online</email>
                        </publishRegistry>
                    </docker>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
